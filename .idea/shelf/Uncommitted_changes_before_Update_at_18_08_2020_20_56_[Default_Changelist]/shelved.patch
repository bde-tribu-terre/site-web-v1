Index: -mvc/vue/gabarits/public/trouverUneSalle.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"container text-center\">\n    <h3>Trouver une salle</h3>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-sm-4\"></div>\n        <div class=\"col-sm-4\">\n            <form id=\"formConnexion\" method=\"get\" onsubmit=\"return verifForm(this);\">\n                <p> <!-- Nom Salle -->\n                    <label style=\"display: none\" for=\"nom\">Nom de la salle</label>\n                    <!-- En display none JS prends les retours à la ligne avant et après du innerText -->\n                    <input\n                            id=\"nom\"\n                            name=\"nom\"\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"Saisir le nom de la salle\"\n                            onblur=\"verifNonVide(this);\"\n                            oninput=\"garderMoins(this, 64);\"\n                    >\n                </p>\n                <hr>\n                <p> <!-- Rechercher -->\n                    <input\n                            type=\"submit\"\n                            class=\"btn btn-danger btn-block\"\n                            value=\"Lancer la recherche\"\n                    >\n                </p>\n            </form>\n        </div>\n        <div class=\"col-sm-4\"></div>\n    </div>\n</div><br>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- -mvc/vue/gabarits/public/trouverUneSalle.php	(revision 647989f536b64640e11d1e37cb1608f7375a5d56)
+++ -mvc/vue/gabarits/public/trouverUneSalle.php	(date 1597776765821)
@@ -22,7 +22,7 @@
                 <p> <!-- Rechercher -->
                     <input
                             type="submit"
-                            class="btn btn-danger btn-block"
+                            class="btn btn-var btn-block"
                             value="Lancer la recherche"
                     >
                 </p>
Index: api/plan-universite/index.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Plan interactif | Tribu-Terre</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"universite.css\">\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.6.0/dist/leaflet.css\" integrity=\"sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==\" crossorigin=\"\"/>\n    <script src=\"https://unpkg.com/leaflet@1.6.0/dist/leaflet.js\" integrity=\"sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew==\" crossorigin=\"\"></script>\n    <script src='https://unpkg.com/@turf/turf/turf.min.js'></script>\n</head>\n<body>\n<div\n    class=\"carte\"\n    id=\"carte\"\n></div>\n<script type=\"text/javascript\">\n    // Si conditions\n    <?php\n    $universiteJSON = json_decode(file_get_contents('../universite.json'));\n    if (!empty($_GET)) {\n        foreach ($universiteJSON as $codeComposante => $composante) {\n            if (isset($_GET['c']) && !(strtolower($_GET['c']) == strtolower($codeComposante))) {\n                unset($universiteJSON->$codeComposante);\n                continue;\n            }\n            if (isset($_GET['b'])) {\n                foreach ($composante->batiments as $ibatiment => $batiment) {\n                    //echo !($_GET['b'] == $ibatiment) ? 'V' : 'F';\n                    if (!($_GET['b'] == $ibatiment)) {\n                        unset($universiteJSON->$codeComposante->batiments[$ibatiment]);\n                    }\n                }\n            }\n        }\n    }\n    $universiteJSONCompact = preg_replace('/\\'/', '\\\\\\'', preg_replace('/(^|\\n)\\s*/', '', json_encode($universiteJSON)));\n    ?>\n\n    // Lecture du JSON\n    let universiteJSON = JSON.parse('<?php echo $universiteJSONCompact ?>');\n</script>\n<script src=\"universite.js\"></script>\n</body>\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- api/plan-universite/index.php	(revision 647989f536b64640e11d1e37cb1608f7375a5d56)
+++ api/plan-universite/index.php	(date 1597776080268)
@@ -29,7 +29,6 @@
             }
             if (isset($_GET['b'])) {
                 foreach ($composante->batiments as $ibatiment => $batiment) {
-                    //echo !($_GET['b'] == $ibatiment) ? 'V' : 'F';
                     if (!($_GET['b'] == $ibatiment)) {
                         unset($universiteJSON->$codeComposante->batiments[$ibatiment]);
                     }
Index: -mvc/vue/gabarits/public/trouverUneSalleRecherche.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"container text-center\">\n    <h3>Trouver une salle</h3>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-sm-3\"></div>\n        <div class=\"col-sm-6\">\n            <?php\n            echo NOMBRE > 1 ?\n                '<h4>' . NOMBRE . 'salles correspondantes ont été trouvées.</h4>' :\n                '<h4>Une salle correspondante a été trouvée.</h4>';\n            echo SALLES\n            ?>\n        </div>\n        <div class=\"col-sm-3\"></div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <h3>Emplacement du bâtiment</h3>\n            <div class=\"img-arrondi ombre text-center\" style=\"height: 80vh\">\n                <iframe\n                        style=\"border:none;overflow:hidden\"\n                        width=\"100%\"\n                        height=\"100%\"\n                        scrolling=\"no\"\n                        frameborder=\"0\"\n                        title=\"Plan Interactif du Campus\"\n                        src=\"<?php echo RACINE . 'api/plan-universite/?c=' . CODE_COMPOSANTE . '&b=' . ID_BATIMENT ?>\"\n                ></iframe>\n            </div>\n        </div>\n        <div class=\"col-sm-6\">\n            <h3>Emplacement de la salle</h3>\n            <p>\n                Plan de l'intérieur du bâtiment...\n            </p>\n        </div>\n    </div>\n    <hr>\n    <h3>Lancer une nouvelle recherche</h3>\n    <div class=\"row\">\n        <div class=\"col-sm-4\"></div>\n        <div class=\"col-sm-4\">\n            <form id=\"formConnexion\" method=\"get\" onsubmit=\"return verifForm(this);\">\n                <p> <!-- Nom Salle -->\n                    <label style=\"display: none\" for=\"nom\">Nom de la salle</label>\n                    <!-- En display none JS prends les retours à la ligne avant et après du innerText -->\n                    <input\n                            id=\"nom\"\n                            name=\"nom\"\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"Saisir le nom de la salle\"\n                            onblur=\"verifNonVide(this);\"\n                            oninput=\"garderMoins(this, 64);\"\n                    >\n                </p>\n                <hr>\n                <p> <!-- Rechercher -->\n                    <input\n                            type=\"submit\"\n                            class=\"btn btn-danger btn-block\"\n                            value=\"Lancer la recherche\"\n                    >\n                </p>\n            </form>\n        </div>\n        <div class=\"col-sm-4\"></div>\n    </div>\n</div><br>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- -mvc/vue/gabarits/public/trouverUneSalleRecherche.php	(revision 647989f536b64640e11d1e37cb1608f7375a5d56)
+++ -mvc/vue/gabarits/public/trouverUneSalleRecherche.php	(date 1597776765861)
@@ -58,7 +58,7 @@
                 <p> <!-- Rechercher -->
                     <input
                             type="submit"
-                            class="btn btn-danger btn-block"
+                            class="btn btn-var btn-block"
                             value="Lancer la recherche"
                     >
                 </p>
Index: -mvc/modele/modele.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n########################################################################################################################\n########################################################################################################################\n###                                                                                                                  ###\n###                                                BASE DE DONNÉE SQL                                                ###\n###                                                                                                                  ###\n########################################################################################################################\n########################################################################################################################\n\n########################################################################################################################\n# Fonction d'automation de requêtes SQL                                                                                #\n########################################################################################################################\nfunction MET_SQLLigneUnique($object) {\n    if ($object) {\n        $array = array();\n        foreach ($object as $key => $val) {\n            $array[$key] = is_string($val) ? htmlentities($val, ENT_QUOTES, 'UTF-8') : $val;\n        }\n        return $array;\n    }\n    return $object;\n}\n\nfunction MET_SQLLignesMultiples($arrayObject) {\n    $array = array();\n    foreach ($arrayObject as $objectKey => $objectValue) {\n        $array[$objectKey] = MET_SQLLigneUnique($objectValue);\n    }\n    return $array;\n}\n\nfunction requeteSQL($requete, $variables = array(), $nbResultats = 2, $codeMessageSucces = NULL, $texteMessageSucces = NULL) {\n    try {\n        $connexion = getConnect();\n        $prepare = $connexion->prepare($requete);\n        foreach ($variables as $variable) {\n            $data_type = $variable[2] == 'INT' ? PDO::PARAM_INT : PDO::PARAM_STR;\n            $prepare->bindValue($variable[0], $variable[1], $data_type);\n        }\n        $prepare->execute();\n        switch ($nbResultats) {\n            case 0:\n                $retour = NULL;\n                break;\n            case 1:\n                $retour = MET_SQLLigneUnique($prepare->fetch());\n                break;\n            default:\n                $retour = MET_SQLLignesMultiples($prepare->fetchAll());\n        }\n        $prepare->closeCursor();\n        if ($codeMessageSucces && $texteMessageSucces) {\n            ajouterMessage($codeMessageSucces, $texteMessageSucces);\n        }\n        return $retour;\n    } catch (Exception $e) {\n        ajouterMessage(600, $e->getMessage());\n        switch ($nbResultats) {\n            case 0:\n            case 1:\n                return NULL;\n            default:\n                return array();\n        }\n    }\n}\n\n########################################################################################################################\n# Membres                                                                                                              #\n########################################################################################################################\nfunction MdlVerifConnexion($login, $mdp) {\n    $membre = requeteSQL(\n        \"\n        SELECT\n            idMembres AS id,\n            loginMembres AS login,\n            prenomMembres AS prenom,\n            nomMembres AS nom,\n            mdpHashMembres AS mdpHash,\n            mdpSaltMembres AS mdpSalt\n        FROM\n            Membres\n        WHERE\n            loginMembres=:login\n        \",\n        array(\n            [':login', $login, 'STR']\n        ),\n        1\n    );\n    if ($membre) {\n        // https://youtu.be/8ZtInClXe1Q pour des explications.\n        $mdpSaisieHash = hash('whirlpool', html_entity_decode($membre['mdpSalt']) . $mdp);\n        if (html_entity_decode($membre['mdpHash']) == $mdpSaisieHash) {\n            return $membre;\n        }\n    }\n    return false;\n}\n\nfunction MdlInfosMembre($id) {\n    ajouterRetourModele(\n        'membre',\n        requeteSQL(\n            \"\n            SELECT\n                idMembres AS id,\n                loginMembres AS login,\n                prenomMembres AS prenom,\n                nomMembres AS nom\n            FROM\n                Membres\n            WHERE\n                idMembres=:idMembres\n            \",\n            array(\n                [':idMembres', $id, 'INT']\n            ),\n            1\n        )\n    );\n}\n\nfunction MdlAjouterMembre($prenom, $nom, $login, $mdp) {\n    $salt = '';\n    for ($i = 0; $i < 32; $i++) {\n        $salt .= chr(rand(33, 126));\n    }\n    $mdpHash = hash('whirlpool', $salt . $mdp);\n\n    requeteSQL(\n        \"\n        INSERT INTO\n            Membres\n        VALUES\n            (\n                0,\n                :login,\n                :mdpHash,\n                :mdpSalt,\n                :prenom,\n                :nom\n            )\n        \",\n        array(\n            [':login', $login, 'STR'],\n            [':mdpHash', $mdpHash, 'STR'],\n            [':mdpSalt', $salt, 'STR'],\n            [':prenom', $prenom, 'STR'],\n            [':nom', $nom, 'STR']\n        ),\n        0,\n        201,\n        'L\\'inscription a bien été enregistrée.'\n    );\n}\n\n########################################################################################################################\n# Clés d'inscription                                                                                                   #\n########################################################################################################################\nfunction MdlCleExiste($cle) {\n    $cle = requeteSQL(\n        \"\n        SELECT\n            idClesInscriptions AS id,\n            strClesInscriptions AS str\n        FROM\n            ClesInscriptions\n        WHERE\n            strClesInscriptions=:cle\n        \",\n        array(\n            [':cle', $cle, 'STR']\n        ),\n        1,\n        NULL,\n        NULL\n    );\n    if ($cle) {\n        requeteSQL(\n            \"\n            DELETE FROM\n                ClesInscriptions\n            WHERE\n                idClesInscriptions=:id\n            \",\n            array(\n                [':id', $cle['id'], 'INT']\n            ),\n            false,\n            201,\n            'La clé d\\'inscription \"' . $cle['str'] . '\" a été détruite avec succès.'\n        );\n        return true;\n    }\n    return false;\n}\n\n########################################################################################################################\n# Log des actions                                                                                                      #\n########################################################################################################################\nfunction MdlLogTous() {\n    ajouterRetourModele(\n        'log',\n        requeteSQL(\n            \"\n            SELECT\n                idLogActions AS idLog,\n                idMembres AS idMembre,\n                prenomMembres AS prenomMembre,\n                nomMembres AS nomMembre,\n                codeLogActions AS code,\n                dateLogActions AS date,\n                descLogActions AS description\n            FROM\n                LogActions\n                    NATURAL JOIN\n                Membres\n            ORDER BY\n                dateLogActions\n                DESC\n            \"\n        )\n    );\n}\n\nfunction MdlAjouterLog($code, $message) {\n    $timestamp = time();\n    $dt = new DateTime('now', new DateTimeZone('Europe/Paris'));\n    $dt->setTimestamp($timestamp);\n    requeteSQL(\n        \"\n        INSERT INTO\n            LogActions\n        VALUES\n            (\n                0,\n                :idMembres,\n                :codeLogActions,\n                :dateLogActions,\n                :descLogActions\n            )\n        \",\n        array(\n            [':idMembres', $_SESSION['membre']['id'], 'STR'],\n            [':codeLogActions', $code, 'INT'],\n            [':dateLogActions', $dt->format('Y-m-d H-i-s'), 'STR'],\n            [':descLogActions', $message, 'STR']\n        ),\n        0\n    );\n}\n\n########################################################################################################################\n# Évents                                                                                                               #\n########################################################################################################################\nfunction MdlEventsTous($tri, $aVenir, $passes, $maxi) {\n    switch ($tri) {\n        case 'FP':\n            $triSQL = ' ORDER BY dateEvents DESC';\n            break;\n        case 'PF':\n            $triSQL = ' ORDER BY dateEvents';\n            break;\n        default:\n            $triSQL = ''; // Normalement jamais atteint.\n    }\n    switch ($maxi) {\n        case NULL:\n            $maxiSQL = '';\n            break;\n        default:\n            $maxiSQL = ' LIMIT ' . $maxi;\n            break;\n    }\n    $timestamp = time();\n    $dt = (new DateTime('now', new DateTimeZone('Europe/Paris')));\n    $dt->setTimestamp($timestamp);\n    $ajd = $dt->format('Y-m-d');\n    $where = \" WHERE 1=2\"; // Condition useless pour concaténer après.\n    if ($aVenir) {\n        $where .= \" OR dateEvents>='\" . $ajd . \"'\";\n    }\n    if ($passes) {\n        $where .= \" OR dateEvents<'\" . $ajd . \"'\";\n    }\n    ajouterRetourModele(\n        'events',\n        requeteSQL(\n            \"\n            SELECT\n                idEvents AS id,\n                titreEvents AS titre,\n                descEvents AS description,\n                dateEvents AS date,\n                heureEvents AS heure,\n                lieuEvents AS lieu\n            FROM\n                Events\n            \" . $where . \"\n            \" . $triSQL . \"\n            \" . $maxiSQL . \"\n            \"\n        )\n    );\n}\n\nfunction MdlEventPrecis($id) {\n    ajouterRetourModele(\n        'event',\n        requeteSQL(\n            \"\n            SELECT\n                idEvents AS id,\n                titreEvents AS titre,\n                descEvents AS description,\n                dateEvents AS date,\n                heureEvents AS heure,\n                lieuEvents AS lieu\n            FROM\n                Events\n            WHERE\n                idEvents=:idEvents\n            \",\n            array(\n                [':idEvents', $id, 'INT']\n            ),\n            1\n        )\n    );\n}\n\nfunction MdlCreerEvent($titre, $date, $heure, $minute, $lieu, $desc) {\n    requeteSQL(\n        \"\n        INSERT INTO\n            Events\n        VALUES\n            (\n                0,\n                :titreEvents,\n                :descEvents,\n                :dateEvents,\n                :heureEvents,\n                :lieuEvents\n            )\n        \",\n        array(\n            [':titreEvents', $titre, 'STR'],\n            [':descEvents', $desc, 'STR'],\n            [':dateEvents', $date, 'STR'],\n            [':heureEvents', $heure . ':' . $minute . ':00', 'STR'],\n            [':lieuEvents', $lieu, 'STR']\n        ),\n        0,\n        201,\n        'L\\'évent \"' . $titre . '\" a été ajouté avec succès !'\n    );\n    MdlAjouterLog(101, 'Ajout de l\\'évent \"' . $titre . '\".');\n}\n\nfunction MdlModifierEvent($id, $titre, $date, $heure, $minute, $lieu, $desc) {\n    requeteSQL(\n        \"\n        UPDATE\n            Events\n        SET\n            titreEvents=:titreEvents,\n            descEvents=:descEvents,\n            dateEvents=:dateEvents,\n            heureEvents=:heureEvents,\n            lieuEvents=:lieuEvents\n        WHERE\n            idEvents=:idEvents\n        \",\n        array(\n            [':idEvents', $id, 'INT'],\n            [':titreEvents', $titre, 'STR'],\n            [':descEvents', $desc, 'STR'],\n            [':dateEvents', $date, 'STR'],\n            [':heureEvents', $heure . ':' . $minute . ':00', 'STR'],\n            [':lieuEvents', $lieu, 'STR']\n        ),\n        0,\n        201,\n        'L\\'évent \"' . $titre . '\" a été modifié avec succès !'\n    );\n    MdlAjouterLog(102, 'Modification de l\\'évent \"' . $titre . '\".');\n}\n\nfunction MdlSupprimerEvent($id) {\n    requeteSQL(\n        \"\n        DELETE FROM\n            Events\n        WHERE\n            idEvents=:idEvents\n        \",\n        array(\n            [':idEvents', $id, 'INT']\n        ),\n        0,\n        201,\n        'L\\'évent a été supprimé avec succès !'\n    );\n    MdlAjouterLog(103, 'Suppression d\\'un évent (ID : ' . $id . ').');\n}\n\n########################################################################################################################\n# Goodies                                                                                                              #\n########################################################################################################################\nfunction MdlGoodiesTous($tri, $disponible, $bientot, $rupture) {\n    switch ($tri) {\n        case 'nom':\n            $triSQL = ' ORDER BY titreGoodies';\n            break;\n        case 'prixAD':\n            $triSQL = ' ORDER BY prixADGoodies';\n            break;\n        case 'prixADD':\n            $triSQL = ' ORDER BY prixADGoodies DESC';\n            break;\n        case 'prixNAD':\n            $triSQL = ' ORDER BY prixNADGoodies';\n            break;\n        case 'prixNADD':\n            $triSQL = ' ORDER BY prixNADGoodies DESC';\n            break;\n        default:\n            $triSQL = '';\n    }\n    $where = \" WHERE 1=2\"; // Condition useless pour concaténer après.\n    $where .= $disponible ? \" OR categorieGoodies=1\" : '';\n    $where .= $bientot ? \" OR categorieGoodies=2\" : '';\n    $where .= $rupture ? \" OR categorieGoodies=3\" : '';\n    ajouterRetourModele(\n        'goodies',\n        requeteSQL(\n            \"\n            SELECT\n                idGoodies AS id,\n                titreGoodies AS titre,\n                prixADGoodies AS prixAD,\n                prixNADGoodies AS prixNAD,\n                descGoodies AS description,\n                categorieGoodies AS categorie,\n                miniatureGoodies AS miniature\n            FROM\n                Goodies\n            \" . $where . \"\n            \" . $triSQL . \"\n            \"\n        )\n    );\n}\n\nfunction MdlGoodiePrecis($id) {\n    ajouterRetourModele(\n        'goodie',\n        requeteSQL(\n            \"\n            SELECT\n                idGoodies AS id,\n                titreGoodies AS titre,\n                prixADGoodies AS prixAD,\n                prixNADGoodies AS prixNAD,\n                descGoodies AS description,\n                categorieGoodies AS categorie,\n                miniatureGoodies AS miniature\n            FROM\n                Goodies\n            WHERE\n                idGoodies=:idGoodies\n            \",\n            array(\n                [':idGoodies', $id, 'INT']\n            ),\n            true\n        )\n    );\n}\n\nfunction MdlAjouterGoodie($rep, $titre, $categorie, $prixADEuro, $prixADCentimes, $prixNADEuro, $prixNADCentimes, $desc, $fileImput) {\n    try {\n        # Enregistrement de la miniature.\n        $infosFichier = pathinfo($_FILES[$fileImput]['name']);\n        $extension = $infosFichier['extension'];\n        $newName = 'img-m-' . preg_replace('/[\\W|.]/', '', $titre) . '-' . time() . '.' . $extension; # time() => aucun doublon imaginable.\n        move_uploaded_file(\n            $_FILES[$fileImput]['tmp_name'],\n            $rep . $newName\n        );\n    } catch (Exception $e) {\n        ajouterMessage(501, $e->getMessage());\n        return;\n    }\n\n    # Enregistrement des données dans la BDD SQL.\n    requeteSQL(\n        \"\n        INSERT INTO\n            Goodies\n        VALUES\n            (\n                0,\n                :titreGoodies,\n                :prixADGoodies,\n                :prixNADGoodies,\n                :descGoodies,\n                :categorieGoodies,\n                :miniatureGoodies\n            )\n        \",\n        array(\n            [':titreGoodies', $titre, 'STR'],\n            [':prixADGoodies', $prixADEuro + ($prixADCentimes / 100), 'STR'],\n            [':prixNADGoodies', $prixNADEuro + ($prixNADCentimes / 100), 'STR'],\n            [':descGoodies', $desc, 'STR'],\n            [':categorieGoodies', $categorie, 'INT'],\n            [':miniatureGoodies', $newName, 'STR']\n        ),\n        0,\n        201,\n        'Le goodie \"' . $titre . '\" a été ajouté avec succès !'\n    );\n    MdlAjouterLog(101, 'Ajout du goodie \"' . $titre . '\".');\n}\n\nfunction MdlModifierGoodie($id, $titre, $categorie, $prixADEuro, $prixADCentimes, $prixNADEuro, $prixNADCentimes, $desc) {\n    requeteSQL(\n        \"\n        UPDATE\n            Goodies\n        SET\n            titreGoodies=:titreGoodies,\n            prixADGoodies=:prixADGoodies,\n            prixNADGoodies=:prixNADGoodies,\n            descGoodies=:descGoodies,\n            categorieGoodies=:categorieGoodies\n        WHERE\n            idGoodies=:idGoodies\n        \",\n        array(\n            [':idGoodies', $id, 'INT'],\n            [':titreGoodies', $titre, 'STR'],\n            [':prixADGoodies', $prixADEuro + ($prixADCentimes / 100), 'STR'],\n            [':prixNADGoodies', $prixNADEuro + ($prixNADCentimes / 100), 'STR'],\n            [':descGoodies', $desc, 'STR'],\n            [':categorieGoodies', $categorie, 'INT']\n        ),\n        0,\n        201,\n        'Le goodie ' . $titre . ' a été modifié avec succès !'\n    );\n    MdlAjouterLog(202, 'Modification du goodie \"' . $titre . '\".');\n}\n\nfunction MdlSupprimerGoodie($rep, $id) {\n    # Suppression des images\n    $images = requeteSQL(\n        \"\n        SELECT\n            idImagesGoodies AS id,\n            lienImagesGoodies AS lien\n        FROM\n            ImagesGoodies\n        WHERE\n            idGoodies=:idGoodies\n        \",\n        array(\n            [':idGoodies', $id, 'INT']\n        )\n    );\n    foreach ($images as $image) {\n        MdlSupprimerImageGoodie($rep, $image['id'], false);\n    }\n\n    try {\n        # Suppression de la miniature du goodie\n        $miniature = requeteSQL(\n            \"\n            SELECT\n                miniatureGoodies AS miniature\n            FROM\n                Goodies\n            WHERE\n                idGoodies=:idGoodies\n            \",\n            array(\n                [\":idGoodies\", $id, 'INT']\n            ),\n            1\n        )['miniature'];\n        unlink($rep . $miniature);\n    } catch (Exception $e) {\n        ajouterMessage(501, $e->getMessage());\n        return;\n    }\n\n    # Suppression des données\n    requeteSQL(\n        \"\n        DELETE FROM\n            Goodies\n        WHERE\n            idGoodies=:idGoodies\n        \",\n        array(\n            [':idGoodies', $id, 'INT']\n        ),\n        0,\n        201,\n        'Le goodie a été supprimée avec succès !'\n    );\n    MdlAjouterLog(203, 'Suppression d\\'un goodie (ID : ' . $id . ').');\n}\n\nfunction MdlImagesGoodie($id) {\n    ajouterRetourModele(\n        'imagesGoodie',\n        requeteSQL(\n            \"\n            SELECT\n                idImagesGoodies AS id,\n                lienImagesGoodies AS lien\n            FROM\n                ImagesGoodies\n            WHERE\n                idGoodies=:idGoodies\n            \",\n            array(\n                [':idGoodies', $id, 'INT']\n            )\n        )\n    );\n}\n\nfunction MdlAjouterImageGoodie($rep, $id, $fileImput) {\n    try {\n        # Enregistrement de la miniature.\n        $titre = requeteSQL(\n            \"\n            SELECT\n                titreGoodies AS titre\n            FROM\n                Goodies\n            WHERE\n                idGoodies=:idGoodies\n            \",\n            array(\n                [':idGoodies', $id, 'INT']\n            ),\n            1\n        )['titre'];\n        $infosFichier = pathinfo($_FILES[$fileImput]['name']);\n        $extension = $infosFichier['extension'];\n        $newName = 'img-i-' . preg_replace('/[\\W|.]/', '', $titre) . '-' . time() . '.' . $extension; # time() => aucun doublon imaginable.\n        move_uploaded_file(\n            $_FILES[$fileImput]['tmp_name'],\n            $rep . $newName\n        );\n    } catch (Exception $e) {\n        ajouterMessage(501, $e->getMessage());\n        return;\n    }\n\n    # Enregistrement des données dans la BDD SQL.\n    requeteSQL(\n        \"\n        INSERT INTO\n            ImagesGoodies\n        VALUES\n            (\n                0,\n                :idGoodies,\n                :lienImagesgoodies\n            )\n        \",\n        array(\n            [':idGoodies', $id, 'INT'],\n            [':lienImagesgoodies', $newName, 'STR']\n        ),\n        0,\n        201,\n        'L\\'image a été ajoutée avec succès !'\n    );\n    MdlAjouterLog(204, 'Ajout d\\'une image d\\'un goodie (ID : ' . $id . ').');\n}\n\nfunction MdlSupprimerImageGoodie($rep, $id, $logguer) {\n    try {\n        $lienImage = requeteSQL(\n            \"\n            SELECT\n                lienImagesGoodies AS lien\n            FROM\n                ImagesGoodies\n            WHERE\n                idImagesGoodies=:idImagesGoodies\n            \",\n            array(\n                [':idImagesGoodies', $id, 'INT']\n            ),\n            1\n        )['lien'];\n        unlink($rep . $lienImage);\n    } catch (Exception $e) {\n        ajouterMessage(501, $e->getMessage());\n        return;\n    }\n\n    # Suppression des données\n    requeteSQL(\n        \"\n        DELETE FROM\n            ImagesGoodies\n        WHERE\n            idImagesGoodies=:idImagesGoodies\n        \",\n        array(\n            [':idImagesGoodies', $id, 'INT']\n        ),\n        0,\n        $logguer ? 201 : NULL,\n        $logguer ? 'L\\'image a été supprimée avec succès !' : NULL\n    );\n    if ($logguer) {\n        MdlAjouterLog(205, 'Suppression d\\'une image d\\'un goodie (ID : ' . $id . ').');\n    }\n}\n\n########################################################################################################################\n# Journaux                                                                                                             #\n########################################################################################################################\nfunction MdlJournauxTous($maxi = NULL) {\n    ajouterRetourModele(\n        'journaux',\n        requeteSQL(\n            \"\n            SELECT\n                idJournaux AS id,\n                titreJournaux AS titre,\n                dateJournaux AS date,\n                pdfJournaux AS pdf\n            FROM\n                Journaux\n            ORDER BY\n                dateJournaux\n                DESC\n            \" . ($maxi ? 'LIMIT ' . $maxi : '') . \"\n            \"\n        )\n    );\n}\n\nfunction MdlAjouterJournal($rep, $titre, $mois, $annee, $fileImput) {\n    try {\n        # Enregistrement du fichier PDF.\n        $newName = preg_replace('/[\\W]/', '', $titre) . '-' . time() . '.pdf'; # time() => aucun doublon imaginable.\n        move_uploaded_file(\n            $_FILES[$fileImput]['tmp_name'],\n            $rep . $newName\n        );\n    } catch (Exception $e) {\n        ajouterMessage(501, $e->getMessage());\n        return;\n    }\n\n    # Enregistrement des données dans la BDD SQL.\n    requeteSQL(\n        \"\n        INSERT INTO\n            Journaux\n        VALUES\n            (\n                0,\n                :titreJournaux,\n                :dateJournaux,\n                :pdfJournaux\n            )\n        \",\n        array(\n            [':titreJournaux', $titre, 'STR'],\n            [':dateJournaux', $annee . '-' . $mois . '-' . '01', 'STR'],\n            [':pdfJournaux', $newName, 'STR']\n        ),\n        0,\n        201,\n        'Le journal \"' . $titre . '\" a été ajouté avec succès !'\n    );\n    MdlAjouterLog(301, 'Ajout du journal \"' . $titre . '\".');\n}\n\nfunction MdlSupprimerJournal($rep, $id) {\n    try {\n        # Suppression du journal\n        $pdf = requeteSQL(\n            \"\n            SELECT\n                pdfJournaux AS pdf\n            FROM\n                Journaux\n            WHERE\n                idJournaux=:idJournaux\n            \",\n            array(\n                [':idJournaux', $id, 'INT']\n            ),\n            1\n        )['pdf'];\n        unlink($rep . $pdf);\n    } catch (Exception $e) {\n        ajouterMessage(501, $e->getMessage());\n        return;\n    }\n\n    # Suppression des données\n    requeteSQL(\n        \"\n        DELETE FROM\n            Journaux\n        WHERE\n            idJournaux=:idJournaux\n        \",\n        array(\n            [':idJournaux', $id, 'INT']\n        ),\n        0,\n        201,\n        'Le journal a été supprimé avec succès !'\n    );\n    MdlAjouterLog(302, 'Suppression d\\'un journal (ID : ' . $id . ').');\n}\n\n########################################################################################################################\n# Articles                                                                                                             #\n########################################################################################################################\nfunction MdlArticlesTous($visibles = true, $invisibles = false) {\n    ajouterRetourModele(\n        'articles',\n        requeteSQL(\n            \"\n            SELECT\n                idArticles AS id,\n                titreArticles AS titre,\n                titreCategoriesArticles AS categorie,\n                visibiliteArticles AS visibilite,\n                texteArticles AS texte,\n                prenomMembres AS prenomAuteur,\n                nomMembres AS nomAuteur,\n                dateCreationArticles AS dateCreation,\n                dateModificationArticles AS dateModification\n            FROM\n                Articles\n                    NATURAL JOIN\n                Membres\n                    NATURAL JOIN\n                CategoriesArticles\n            WHERE\n                1=2\" . ($visibles ? \" OR visibiliteArticles=1\" : \"\") . ($invisibles ? \" OR visibiliteArticles=0\" : \"\") . \"\n            ORDER BY\n                dateCreationArticles\n                DESC\n            \"\n        )\n    );\n}\n\nfunction MdlArticlePrecis($id) {\n    ajouterRetourModele(\n        'article',\n        requeteSQL(\n            \"\n            SELECT\n                idArticles AS id,\n                titreArticles AS titre,\n                idCategoriesArticles AS idCategorie,\n                titreCategoriesArticles AS categorie,\n                visibiliteArticles AS visibilite,\n                texteArticles AS texte,\n                prenomMembres AS prenomAuteur,\n                nomMembres AS nomAuteur,\n                dateCreationArticles AS dateCreation,\n                dateModificationArticles AS dateModification\n            FROM\n                Articles\n                    NATURAL JOIN\n                Membres\n                    NATURAL JOIN\n                CategoriesArticles\n            WHERE\n                idArticles=:idArticles\n            \",\n            array(\n                [':idArticles', $id, 'INT']\n            ),\n            1\n        )\n    );\n}\n\nfunction MdlAjouterArticle($titre, $categorie, $visibilite, $texte) {\n    $timestamp = time();\n    $dt = (new DateTime('now', new DateTimeZone('Europe/Paris')));\n    $dt->setTimestamp($timestamp);\n    requeteSQL(\n        \"\n        INSERT INTO\n            Articles\n        VALUES\n            (\n                0,\n                :idMembres,\n                :idCategorieArticles,\n                :titreArticles,\n                :texteArticles,\n                :visibiliteArticles,\n                :dateCreationArticles,\n                :dateModificationArticles\n            )\n        \",\n        array(\n            [':idMembres', $_SESSION['membre']['id'], 'INT'],\n            [':idCategorieArticles', $categorie, 'INT'],\n            [':titreArticles', $titre, 'STR'],\n            [':texteArticles', $texte, 'STR'],\n            [':visibiliteArticles', $visibilite, 'INT'],\n            [':dateCreationArticles', $dt->format('Y-m-d'), 'STR'],\n            [':dateModificationArticles', NULL, 'STR']\n        ),\n        0,\n        201,\n        'L\\'article \"' . $titre . '\" a été ajouté avec succès !'\n    );\n    MdlAjouterLog(401, 'Ajout de l\\'article \"' . $titre . '\".');\n}\n\nfunction MdlModifierArticle($id, $titre, $categorie, $visibilite, $texte) {\n    $timestamp = time();\n    $dt = (new DateTime('now', new DateTimeZone('Europe/Paris')));\n    $dt->setTimestamp($timestamp);\n    requeteSQL(\n        \"\n        UPDATE\n            Articles\n        SET\n            idCategoriesArticles=:idCategoriesArticles,\n            titreArticles=:titreArticles,\n            visibiliteArticles=:visibiliteArticles,\n            texteArticles=:texteArticles,\n            dateModificationArticles=:dateModificationArticles\n        WHERE\n            idArticles=:idArticles\n        \",\n        array(\n            [':idCategoriesArticles', $categorie, 'INT'],\n            [':titreArticles', $titre, 'STR'],\n            [':visibiliteArticles', $visibilite, 'INT'],\n            [':texteArticles', $texte, 'STR'],\n            [':idArticles', $id, 'INT'],\n            [':dateModificationArticles', $dt->format('Y-m-d'), 'STR']\n        ),\n        0,\n        201,\n        'L\\'article \"' . $titre . '\" a été modifié avec succès !'\n    );\n    MdlAjouterLog(402, 'Modification de l\\'article \"' . $titre . '\".');\n}\n\nfunction MdlSupprimerArticle($rep, $id) {\n    # Suppression des images\n    $images = requeteSQL(\n        \"\n        SELECT\n            idImagesArticles AS id,\n            lienImagesArticles AS lien\n        FROM\n            ImagesArticles\n        WHERE\n            idArticles=:idArticles\n        \",\n        array(\n            [':idArticles', $id, 'INT']\n        )\n    );\n    foreach ($images as $image) {\n        MdlSupprimerImageArticle($rep, $image['id'], false);\n    }\n\n    # Suppression des données\n    requeteSQL(\n        \"\n        DELETE FROM\n            Articles\n        WHERE\n            idArticles=:idArticles\n        \",\n        array(\n            [':idArticles', $id, 'INT']\n        ),\n        0,\n        201,\n        'L\\'article a été supprimée avec succès !'\n    );\n    MdlAjouterLog(403, 'Suppression d\\'un article (ID : ' . $id . ').');\n}\n\nfunction MdlCategoriesArticlesTous() {\n    ajouterRetourModele(\n        'categoriesArticles',\n        requeteSQL(\n            \"\n            SELECT\n                idCategoriesArticles AS id,\n                titreCategoriesArticles AS titre\n            FROM\n                CategoriesArticles\n            ORDER BY\n                titreCategoriesArticles\n            \"\n        )\n    );\n}\n\nfunction MdlAjouterCategorieArticle($titre) {\n    requeteSQL(\n        \"\n        INSERT INTO\n            CategoriesArticles\n        VALUES\n            (\n                0,\n                :titreCategoriesArticles\n            )\n        \",\n        array(\n            [':titreCategoriesArticles', $titre, 'STR']\n        ),\n        0,\n        201,\n        'La catégorie d\\'articles \"' . $titre . '\" a été ajouté avec succès !'\n    );\n    MdlAjouterLog(406, 'Ajout de la catégorie d\\'articles \"' . $titre . '\".');\n}\n\nfunction MdlRenommerCategorieArticle($id, $titre) {\n    requeteSQL(\n        \"\n        UPDATE\n            CategoriesArticles\n        SET\n            titreCategoriesArticles=:titreCategoriesArticles\n        WHERE\n            idCategoriesArticles=:idCategoriesArticles\n        \",\n        array(\n            [':idCategoriesArticles', $id, 'INT'],\n            [':titreCategoriesArticles', $titre, 'STR']\n        ),\n        0,\n        201,\n        'La catégorie d\\'articles a été renommée en \"' . $titre . '\" avec succès !'\n    );\n    MdlAjouterLog(407, 'Renommage de la catégorie d\\'article en \"' . $titre . '\" (ID : ' . $id . ').');\n}\n\nfunction MdlImagesArticle($id, $maxi) {\n    ajouterRetourModele(\n        'imagesArticle',\n        requeteSQL(\n            \"\n            SELECT\n                idImagesArticles AS id,\n                lienImagesArticles AS lien\n            FROM\n                ImagesArticles\n            WHERE\n                idArticles=:idArticles\n            \" . ($maxi ? 'LIMIT ' . $maxi : '') . \"\n            \",\n            array(\n                [':idArticles', $id, 'INT']\n            )\n        )\n    );\n}\n\nfunction MdlAjouterImageArticle($rep, $id, $fileImput) {\n    try {\n        # Enregistrement de l'image.\n        $titre = requeteSQL(\n            \"\n            SELECT\n                titreArticles AS titre\n            FROM\n                Articles\n            WHERE\n                idArticles=:idArticles\n            \",\n            array(\n                [':idArticles', $id, 'INT']\n            ),\n            1\n        )['titre'];\n        $infosFichier = pathinfo($_FILES[$fileImput]['name']);\n        $extension = $infosFichier['extension'];\n        $newName = 'img-' . preg_replace('/[\\W|.]/', '', $titre) . '-' . time() . '.' . $extension; # time() => aucun doublon imaginable.\n        move_uploaded_file(\n            $_FILES[$fileImput]['tmp_name'],\n            $rep . $newName\n        );\n    } catch (Exception $e) {\n        ajouterMessage(501, $e->getMessage());\n        return;\n    }\n\n    # Enregistrement des données dans la BDD SQL.\n    requeteSQL(\n        \"\n        INSERT INTO\n            ImagesArticles\n        VALUES\n            (\n                0,\n                :idArticles,\n                :lienImagesArticles\n            )\n        \",\n        array(\n            [':idArticles', $id, 'INT'],\n            [':lienImagesArticles', $newName, 'STR']\n        ),\n        0,\n        201,\n        'L\\'image de l\\'article a été ajoutée avec succès !'\n    );\n    MdlAjouterLog(404, 'Ajout d\\'une image d\\'un article (ID : ' . $id . ').');\n}\n\nfunction MdlSupprimerImageArticle($rep, $id, $logguer) {\n    # Suppression de l'image\n    $image = requeteSQL(\n        \"\n        SELECT\n            lienImagesArticles AS lien\n        FROM\n            ImagesArticles\n        WHERE\n            idImagesArticles=:idImagesArticles\n        \",\n        array(\n            [':idImagesArticles', $id, 'INT']\n        ),\n        1\n    )['lien'];\n    unlink($rep . $image);\n\n    # Suppression des données\n    requeteSQL(\n        \"\n        DELETE FROM\n            ImagesArticles\n        WHERE\n            idImagesArticles=:idImagesArticles\n        \",\n        array(\n            [':idImagesArticles', $id, 'INT']\n        ),\n        0,\n        $logguer ? 201 : NULL,\n        $logguer ? 'L\\'image de l\\'article a été supprimé avec succès !' : NULL\n    );\n    if ($logguer) {\n        MdlAjouterLog(405, 'Suppression d\\'une image d\\'un article (ID : ' . $id . ').');\n    }\n}\n\nfunction MdlDernierArticleTexteVideo($visibles = true, $invisibles = false) {\n    $articleTexte = requeteSQL(\n        \"\n        SELECT\n            idArticles AS id,\n            MAX(dateCreationArticles) AS date\n        FROM\n            Articles\n        WHERE\n            1=2\" . ($visibles ? \" OR visibiliteArticles=1\" : \"\") . ($invisibles ? \" OR visibiliteArticles=0\" : \"\") . \"\n        \",\n        array(),\n        1\n    );\n    $articleVideo = requeteSQL(\n        \"\n        SELECT\n            idArticlesYouTube AS id,\n            MAX(dateCreationArticlesYouTube) AS date\n        FROM\n            ArticlesYouTube\n        WHERE\n            1=2\" . ($visibles ? \" OR visibiliteArticlesYouTube=1\" : \"\") . ($invisibles ? \" OR visibiliteArticlesYouTube=0\" : \"\") . \"\n        \",\n        array(),\n        1\n    );\n    if ($articleTexte['id'] && $articleVideo['id']) {\n        if (strcmp($articleTexte['date'], $articleVideo['date']) >= 0) {\n            MdlArticlePrecis($articleTexte['id']);\n        } else {\n            MdlArticleVideoPrecis($articleVideo['id'], true);\n        }\n    } elseif ($articleTexte['id']) {\n        MdlArticlePrecis($articleTexte['id']);\n    } elseif ($articleVideo['id']) {\n        MdlArticleVideoPrecis($articleVideo['id'], true);\n    } else {\n        ajouterRetourModele(\n            'article',\n            NULL\n        );\n    }\n}\n\nfunction MdlMiniaturesArticles($visibles = true, $invisibles = false) {\n    $retour = array();\n    $miniatures = requeteSQL(\n        \"\n        SELECT\n            idArticles AS id,\n            lienImagesArticles AS lien\n        FROM\n            (\n                SELECT\n                    MIN(idImagesArticles) AS idImagesArticles,\n                    idArticles\n                FROM\n                    ImagesArticles\n                GROUP BY\n                    idArticles\n            ) AS T\n                NATURAL JOIN\n            ImagesArticles\n                NATURAL JOIN\n            Articles   \n        WHERE\n            1=2\" . ($visibles ? \" OR visibiliteArticles=1\" : \"\") . ($invisibles ? \" OR visibiliteArticles=0\" : \"\") . \"\n        \"\n    );\n    foreach ($miniatures as $miniature) {\n        $retour[$miniature['id']] = $miniature['lien'];\n    }\n    ajouterRetourModele(\n        'miniaturesArticles',\n        $retour\n    );\n}\n\n########################################################################################################################\n# Articles vidéo                                                                                                       #\n########################################################################################################################\nfunction MdlArticlesVideoTous($visibles = true, $invisibles = false) {\n    $arrayRetour = requeteSQL(\n        \"\n        SELECT\n            idArticlesYouTube AS id,\n            titreArticlesYouTube AS titre,\n            titreCategoriesArticles AS categorie,\n            visibiliteArticlesYouTube AS visibilite,\n            lienArticlesYouTube AS lien,\n            texteArticlesYouTube AS texte,\n            prenomMembres AS prenomAuteur,\n            nomMembres AS nomAuteur,\n            dateCreationArticlesYouTube AS dateCreation,\n            dateModificationArticlesYouTube AS dateModification\n        FROM\n            ArticlesYouTube\n                NATURAL JOIN\n            Membres\n                NATURAL JOIN\n            CategoriesArticles\n        WHERE\n            1=2\" . ($visibles ? \" OR visibiliteArticlesYouTube=1\" : \"\") . ($invisibles ? \" OR visibiliteArticlesYouTube=0\" : \"\") . \"\n        ORDER BY\n            dateCreationArticlesYouTube\n            DESC\n        \"\n    );\n    foreach ($arrayRetour as $articleVideo) {\n        try {\n            $youtube = \"http://www.youtube.com/oembed?url=\" . $articleVideo['lien'] . \"&format=json\";\n            $curl = curl_init($youtube);\n            curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n            $return = curl_exec($curl);\n            curl_close($curl);\n            $articleVideo['API_YouTube'] = MET_SQLLigneUnique(json_decode($return));\n        } catch (Exception $e) {\n            ajouterMessage(601, 'Les informations sur la vidéo à l\\'adresse \"' . $arrayRetour['lien'] . '\" n\\'ont pas pu être récupérées sur l\\'API YouTube.');\n            $articleVideo['API_YouTube'] = NULL;\n        }\n    }\n    ajouterRetourModele(\n        'articlesVideo',\n        $arrayRetour\n    );\n}\n\nfunction MdlArticleVideoPrecis($id, $article = false) {\n    $arrayRetour = requeteSQL(\n        \"\n        SELECT\n            idArticlesYouTube AS id,\n            titreArticlesYouTube AS titre,\n            idCategoriesArticles AS idCategorie,\n            titreCategoriesArticles AS categorie,\n            visibiliteArticlesYouTube AS visibilite,\n            lienArticlesYouTube AS lien,\n            texteArticlesYouTube AS texte,\n            prenomMembres AS prenomAuteur,\n            nomMembres AS nomAuteur,\n            dateCreationArticlesYouTube AS dateCreation,\n            dateModificationArticlesYouTube AS dateModification\n        FROM\n            ArticlesYouTube\n                NATURAL JOIN\n            Membres\n                NATURAL JOIN\n            CategoriesArticles\n        WHERE\n            idArticlesYouTube=:idArticlesYouTube\n        \",\n        array(\n            [':idArticlesYouTube', $id, 'INT']\n        ),\n        1\n    );\n    try {\n        $youtube = \"http://www.youtube.com/oembed?url=\" . $arrayRetour['lien'] . \"&format=json\";\n        $curl = curl_init($youtube);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n        $return = curl_exec($curl);\n        curl_close($curl);\n        $arrayRetour['API_YouTube'] = MET_SQLLigneUnique(json_decode($return));\n    } catch (Exception $e) {\n        ajouterMessage(601, 'Les informations sur la vidéo à l\\'adresse \"' . $arrayRetour['lien'] . '\" n\\'ont pas pu être récupérées sur l\\'API YouTube.');\n        $arrayRetour['API_YouTube'] = NULL;\n    }\n    ajouterRetourModele(\n        $article ? 'article' : 'articleVideo',\n        $arrayRetour\n    );\n}\n\nfunction MdlAjouterArticleVideo($titre, $categorie, $visibilite, $lien, $texte) {\n    $timestamp = time();\n    $dt = (new DateTime('now', new DateTimeZone('Europe/Paris')));\n    $dt->setTimestamp($timestamp);\n    requeteSQL(\n        \"\n        INSERT INTO\n            ArticlesYouTube\n        VALUES\n            (\n                0,\n                :idCategorieArticles,\n                :idMembres,\n                :titreArticlesYouTube,\n                :texteArticlesYouTube,\n                :lienArticlesYouTube,\n                :visibiliteArticlesYouTube,\n                :dateCreationArticlesYouTube,\n                :dateModificationArticlesYouTube\n             )\n        \",\n        array(\n            [':idMembres', $_SESSION['membre']['id'], 'INT'],\n            [':idCategorieArticles', $categorie, 'INT'],\n            [':titreArticlesYouTube', $titre, 'STR'],\n            [':lienArticlesYouTube', $lien, 'STR'],\n            [':texteArticlesYouTube', $texte, 'STR'],\n            [':visibiliteArticlesYouTube', $visibilite, 'INT'],\n            [':dateCreationArticlesYouTube', $dt->format('Y-m-d'), 'STR'],\n            [':dateModificationArticlesYouTube', NULL, 'STR'],\n        ),\n        0,\n        201,\n        'L\\'article vidéo ' . $titre . ' a été ajouté avec succès'\n    );\n    MdlAjouterLog(501, 'Ajout de l\\'article vidéo \"' . $titre . '\".');\n}\n\nfunction MdlModifierArticleVideo($id, $titre, $categorie, $visibilite, $lien, $texte) {\n    $timestamp = time();\n    $dt = (new DateTime('now', new DateTimeZone('Europe/Paris')));\n    $dt->setTimestamp($timestamp);\n    requeteSQL(\n        \"\n        UPDATE\n            ArticlesYouTube\n        SET\n            idCategoriesArticles=:idCategoriesArticles,\n            titreArticlesYouTube=:titreArticlesYouTube,\n            visibiliteArticlesYouTube=:visibiliteArticlesYouTube,\n            lienArticlesYouTube=:lienArticlesYouTube,\n            texteArticlesYouTube=:texteArticlesYouTube,\n            dateModificationArticlesYouTube=:dateModificationArticlesYouTube\n        WHERE\n            idArticlesYouTube=:idArticlesYouTube\n        \",\n        array(\n            [':idCategoriesArticles', $categorie, 'INT'],\n            [':titreArticlesYouTube', $titre, 'STR'],\n            [':visibiliteArticlesYouTube', $visibilite, 'INT'],\n            [':texteArticlesYouTube', $texte, 'STR'],\n            [':lienArticlesYouTube', $lien, 'STR'],\n            [':idArticlesYouTube', $id, 'INT'],\n            [':dateModificationArticlesYouTube', $dt->format('Y-m-d'), 'STR']\n        ),\n        0,\n        201,\n        'L\\'article vidéo ' . $titre . ' a été modifié avec succès !'\n    );\n    MdlAjouterLog(502, 'Modification de l\\'article vidéo \"' . $titre . '\".');\n}\n\nfunction MdlSupprimerArticleVideo($id) {\n    requeteSQL(\n        \"DELETE FROM ArticlesYouTube WHERE idArticlesYouTube=:idArticlesYouTube\",\n        array(\n            [':idArticlesYouTube', $id, 'INT']\n        ),\n        0,\n        201,\n        'L\\'article vidéo a été supprimé avec succès !'\n    );\n    MdlAjouterLog(503, 'Suppression d\\'un article vidéo (ID : ' . $id . ').');\n}\n\nfunction MdlMiniaturesArticlesVideo($visibles = true, $invisibles = false) {\n    $retour = array();\n    $articlesVideo = requeteSQL(\n        \"\n        SELECT\n            idArticlesYouTube AS id,\n            lienArticlesYouTube AS lien\n        FROM\n            ArticlesYouTube\n        WHERE\n            1=2\" . ($visibles ? \" OR visibiliteArticlesYouTube=1\" : \"\") . ($invisibles ? \" OR visibiliteArticlesYouTube=0\" : \"\") . \"\n        \"\n    );\n    foreach ($articlesVideo as $articleVideo) {\n        try {\n            $youtube = \"http://www.youtube.com/oembed?url=\" . $articleVideo['lien'] . \"&format=json\";\n            $curl = curl_init($youtube);\n            curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n            $return = curl_exec($curl);\n            curl_close($curl);\n            $retour[$articleVideo['id']] = MET_SQLLigneUnique(json_decode($return))['thumbnail_url'];\n        } catch (Exception $e) {\n            ajouterMessage(601, 'Les informations sur la vidéo à l\\'adresse \"' . $articleVideo['lien'] . '\" n\\'ont pas pu être récupérées sur l\\'API YouTube.');\n            $retour[$articleVideo['id']] = NULL;\n        }\n    }\n    ajouterRetourModele(\n        'miniaturesArticlesVideo',\n        $retour\n    );\n}\n\n########################################################################################################################\n# Salles (API)                                                                                                         #\n########################################################################################################################\nfunction MdlRechercherSalle($nom) {\n    try {\n        $api = 'http://localhost/phpstormprojects/Site-Tribu-Terre/api/requete/?r=salles&ns=' . preg_replace('/ /', '+', $nom);\n        $curl = curl_init($api);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n        $return = curl_exec($curl);\n        curl_close($curl);\n        $arrayRetour = MET_SQLLignesMultiples(json_decode($return)->retour);\n    } catch (Exception $e) {\n        ajouterMessage(601, 'Les informations sur la vidéo à l\\'adresse \"' . $nom . '\" n\\'ont pas pu être récupérées sur l\\'API Tribu-Terre.');\n        $arrayRetour = NULL;\n    }\n    ajouterRetourModele(\n        'salles',\n        $arrayRetour\n    );\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- -mvc/modele/modele.php	(revision 647989f536b64640e11d1e37cb1608f7375a5d56)
+++ -mvc/modele/modele.php	(date 1597776950955)
@@ -1471,14 +1471,14 @@
 ########################################################################################################################
 function MdlRechercherSalle($nom) {
     try {
-        $api = 'http://localhost/phpstormprojects/Site-Tribu-Terre/api/requete/?r=salles&ns=' . preg_replace('/ /', '+', $nom);
+        $api = 'http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'] . '/' . RACINE . 'api/requete/?r=salles&ns=' . preg_replace('/ /', '+', $nom);
         $curl = curl_init($api);
         curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
         $return = curl_exec($curl);
         curl_close($curl);
         $arrayRetour = MET_SQLLignesMultiples(json_decode($return)->retour);
     } catch (Exception $e) {
-        ajouterMessage(601, 'Les informations sur la vidéo à l\'adresse "' . $nom . '" n\'ont pas pu être récupérées sur l\'API Tribu-Terre.');
+        ajouterMessage(601, 'Les informations sur la salle "' . $nom . '" n\'ont pas pu être récupérées sur l\'API Tribu-Terre.');
         $arrayRetour = NULL;
     }
     ajouterRetourModele(
